func quickSortWhenLeftPivot(_ arr:  inout [Int], _ low: Int, _ high: Int) {
    if low < high {
        print(" before partition is  array is : \(arr)")
        let partition = partition(&arr, low, high)
        print("partition is :\(partition) and array is : \(arr)")
        quickSortWhenLeftPivot(&arr, low, partition - 1)
        quickSortWhenLeftPivot(&arr, partition + 1, high)
    }

}


func partitionWhenLeftPivot(_ arr:  inout [Int], _ low: Int, _ high: Int) -> Int {
    arr.swapAt(low, high)
    print(arr)
    let pivot = arr[high]
    var i = low
    for j in low..<high {
        if arr[j] < pivot {
            print("array before sorting: \(arr)")
            arr.swapAt(i, j)
            print("array after sorting: \(arr)")
            i += 1
        }
    }
    print("high and i swap before: \(arr)")
    arr.swapAt(i, high)
    print("high and i swap after: \(arr)")
    return i
}

var arr = [4, 2, 7, 1]
quickSortWhenLeftPivot(&arr,0, arr.count - 1)
print("Sorted array: \(arr)")


/*

WHEN CENTER IS PIVOT

*/


func quickSortWhenCenterPivot(_ arr:  inout [Int], _ low: Int, _ high: Int) {
    if low < high {
        print(" before partition is  array is : \(arr)")
        let partition = partitionWhenCenterPivot(&arr, low, high)
        print("partition is :\(partition) and array is : \(arr)")
        quickSortWhenCenterPivot(&arr, low, partition - 1)
        quickSortWhenCenterPivot(&arr, partition + 1, high)
    }

}


func partitionWhenCenterPivot(_ arr:  inout [Int], _ low: Int, _ high: Int) -> Int {
    let mid = (low + high) / 2
    arr.swapAt(mid, high)
    print(arr)
    let pivot = arr[high]
    var i = low
    for j in low..<high {
        if arr[j] < pivot {
            print("array before sorting: \(arr)")
            arr.swapAt(i, j)
            print("array after sorting: \(arr)")
            i += 1
        }
    }
    print("high and i swap before: \(arr)")
    arr.swapAt(i, high)
    print("high and i swap after: \(arr)")
    return i
}

var arr = [4, 2, 7, 1]
quickSortWhenCenterPivot(&arr,0, arr.count - 1)
print("Sorted array: \(arr)")

